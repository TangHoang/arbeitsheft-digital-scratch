{
    "title": "Model Editor",
    "general-settings-header": "Model Settings",
    "type": "Model type",
    "type-program": "Program model",
    "t-type-program": "Represents the program's behavior",
    "type-user": "User model",
    "t-type-user": "Input generation: Simulates a player's behavior",
    "type-end": "End model",
    "t-type-end": "Starts after all program models stopped",
    "load": "Load models",
    "t-load": "Load all models of editor",
    "save": "Download models",
    "t-save": "Save the models of the test editor",
    "tabContent": "Model",
    "newTab": "+ New model",
    "delModel": "X",
    "t-delModel": "Delete model",
    "deletePromptMessage": "Are you sure you want to delete the current model?",
    "okButton": "Ok",
    "cancelButton": "Cancel",
    "addNode": "New node",
    "newNode": "new",
    "addEdge": "New edge",
    "errEdgeStopAllNode": "Stop all nodes cannot have any outgoing edges.",
    "errStopAllNode": "This node has outgoing edges, so it can't be a stop all node.",
    "cancel": "Cancel",
    "explanationNode": "Click on desired position.",
    "explanationEdge": "Click on start node, hold  down and drag to end node.",
    "startNodeTitle": "Start node",
    "stopNodeTitle": "Stop node",
    "stopAllNodeTitle": "Stop node (all models)",
    "optionsNode": "Node Options",
    "optionsEdge": "Edge Options",
    "nodeLabel": "Name",
    "edgeLabel": "Name",
    "deleteSelection": "Delete selection",
    "deleteSelectionMsg": "Are you sure you want to delete the current selection?",
    "selection-explanation": "Choose multiple elements with Ctrl+Click",
    "deletionError": "Start node cannot be deleted.",
    "stopNode": "Stop node",
    "stopAllNode": "Stop node (all models)",
    "t-stopNode": "Stops this model when reached.",
    "t-stopAllNode": "Stops all models when reached.",
    "layout1": "No layout",
    "layout2": "Tree Left-To-Right",
    "layout3": "Tree Top-To-Bottom",
    "fit": "Fit zoom",
    "conditions": "Conditions",
    "newCondition": "New Condition",
    "condition": "Condition",
    "t-conditions": "All conditions have to be fulfilled simultaneously for a transition of the edge.",
    "effects": "Effects",
    "effect": "Effect",
    "newEffect": "New Effect",
    "t-effects": "Are tested after transition of the edge.",
    "UserInput": "User Input",
    "userInputs": "User Inputs",
    "newUserInput": "New User Input",
    "t-userInputs": "Input is triggered after transition of the edge.",
    "back": "Cancel",
    "saveCheck": "Save",
    "add": "+",
    "negated": "Negated",
    "t-negated": "This check should not be fulfilled.",
    "edgeCheckType": "Type",
    "spriteName": "Sprite name",
    "attrName": "Attribute",
    "varName": "Variable",
    "costumeName": "Costume name",
    "value": "Value",
    "change": "Change",
    "t-change": "( + | - | = | += | -= | +<number> | <number> | -<number>)",
    "prob": "Probability",
    "time": "Time",
    "comp": "Comparison",
    "bool": "Is",
    "key": "Key",
    "rValue": "Red",
    "gValue": "Green",
    "bValue": "Blue",
    "xCoord": "X Coordinate",
    "yCoord": "Y Coordinate",
    "layerSelection": "Layer",
    "function": "Function",
    "expr": "Expression",
    "priority": "Order of Edges.",
    "t-priority": "The edges are tested in this order.",
    "notValid": "There are invalid inputs.",
    "effectsError": "The model contains effects on edges belonging to the old model type. These will be deleted. Continue?",
    "forceTest": "Force testing of the edge when",
    "forceTestAfter": "between edge transitions",
    "forceTestAt": "since test start",
    "t-forceTestAfter": "Force testing the conditions of this edge after the defined time elapsed since last edge transition in this model.",
    "t-forceTestAt": "Force testing the conditions of this edge after the defined time elapsed since test start.",
    "ms": "ms",
    "hintTitle": "Tip: ",
    "exprHint": "Expression is a short hand notation for a JavaScript function. You can reference to attributes and variables of a sprite by writing $(Sprite.Attr/Var). Example: $(Cat.x)>100",
    "changeHint": "Changes: + (Increase), - (Decrease), = (No Change), += (Increase or No Change), -= (Decrease or No Change), +VALUE (Increase by), -VALUE (Decrease by)",
    "AttrChange": "Attribute Change",
    "AttrComp": "Attribute Comparison",
    "BackgroundChange": "Background",
    "Click": "Mouse Click",
    "Function": "JavaScript Function",
    "Key": "Key Press",
    "Output": "Speech Bubble",
    "SpriteColor": "Sprite on Color",
    "SpriteTouching": "Sprite Touching",
    "VarChange": "Variable Change",
    "VarComp": "Variable Comparison",
    "Expr": "JavaScript Expression",
    "Probability": "Probability",
    "TimeElapsed": "Time since Beginning",
    "TimeBetween": "Time between Edges",
    "TimeAfterEnd": "Time since End",
    "NbrOfClones": "Number of Clones",
    "NbrOfVisibleClones": "Number of visible Clones",
    "TouchingEdge": "Sprite - Border",
    "TouchingVerticalEdge": "Sprite - Vertical Border",
    "TouchingHorizEdge": "Sprite - Horizontal Border",
    "Layer": "Layer (First or Last)",
    "AnyKey": "Any key pressed",
    "PointsTo": "Sprite points to",
    "ClearedEffects": "Sprite has no Effect",
    "InputClickSprite": "Click Sprite",
    "InputClickStage": "Click Background",
    "InputKey": "Input Key",
    "InputMouseDown": "Input Mouse Click",
    "InputMouseMove": "Move Mouse",
    "InputText": "Input Text",
    "space": "space",
    "left arrow": "left",
    "right arrow": "right",
    "up arrow": "up",
    "down arrow": "down",
    "enter": "enter",
    "InvalidAttributeOrEffect": "This is no attribute",
    "InvalidChange": "This is not a valid change. Allowed are: -,-=,==,+=,+,!=",
    "InvalidComparison": "This is not a valid comparison. Allowed are: <,<=,==,>=,>,!=",
    "InvalidOpForAttribute": "This attribute only allows == und !=",
    "InvalidKey": "This is not a valid key",
    "InvalidSpriteName": "This is not a valid name for a sprite",
    "InvalidVarName": "Invalid name for a variable",
    "NeitherFirstNorLast": "Only First and Last are valid",
    "NeitherNumberNorChange": "Allowed changes: -,-=,==,+=,+,!= and numbers",
    "NeitherNumberNorExpr": "Input must be a number or a valid JavaScript Expression",
    "NeitherNumberNorString": "Input is neither text nor a number",
    "NeitherTrueNorFalse": "Only true und false are valid",
    "NoNonEmptyExprText": "Expression should contain at least one symbol",
    "NoNumber": "Input is not a number",
    "NoStringProvided": "Input is not a text",
    "NumberMustBeNonNegative": "Number must be non-negative",
    "OutOfRgbRange": "Number must be between 0 and 255",
    "StringIsEmpty": "The text must not be empty",
    "ValueIsNoProbability": "The number must be between 0 and 1",
    "currentCostumeName": "costume name",
    "sayText": "say text",
    "rotationStyle": "rotation style",
    "x": "x",
    "y": "y",
    "size": "size",
    "direction": "direction",
    "layerOrder": "layer",
    "volume": "volume",
    "visible": "visibility",
    "color": "color",
    "fisheye": "fisheye",
    "whirl": "whirl",
    "pixelate": "pixelate",
    "mosaic": "mosaic",
    "brightness": "brightness",
    "ghost": "ghost"
}
